repeat task.wait() until game:IsLoaded()

-- FPS Unlock
if setfpscap then
    setfpscap(1000000)
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "dsc.gg/9e9V648aGq",
        Text = "FPS Unlocked!",
        Duration = 2,
        Button1 = "Okay"
    })
    warn("FPS Unlocked!")
else
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "dsc.gg/9e9V648aGq",
        Text = "Your exploit does not support setfpscap.",
        Duration = 2,
        Button1 = "Okay"
    })
    warn("Your exploit does not support setfpscap.")
end

-- Load Luna
local Luna = loadstring(game:HttpGet("https://raw.githubusercontent.com/Nebula-Softworks/Luna-Interface-Suite/refs/heads/master/source.lua", true))()

-- Window
local Window = Luna:CreateWindow({
	Name = "Legitxwx Hub",
	Subtitle = "v1.1.0",
	LogoID = nil,
	LoadingEnabled = true,
	LoadingTitle = "Legitxwx Hub",
	LoadingSubtitle = "by xwx",
	ConfigSettings = {
		ConfigFolder = "LegitxwxHub"
	},
	KeySystem = false
})

-- Home Tab
Window:CreateHomeTab({
	SupportedExecutors = {"Synapse X", "Krnl", "ProtoSmasher"},
	DiscordInvite = "9e9V648aGq",
	Icon = 1
})

-- Services & Player
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- Remotes
local Remotes = ReplicatedStorage:WaitForChild("Remotes")
local BuyGearRemote = Remotes:WaitForChild("BuyGear")
local BuyItemRemote = Remotes:WaitForChild("BuyItem")
local EquipBestBrainrotRemote = Remotes:WaitForChild("EquipBestBrainrots")

-- Lists
local gearList = {"Water Bucket","Frost Grenade","Banana Gun","Frost Blower","Carrot Launcher"}
local seedList = {"Cactus Seed","Strawberry Seed","Pumpkin Seed","Sunflower Seed","Dragon Seed","Eggplant Seed","Watermelon Seed","Grape Seed","Cocotank Seed","Carnivorous Plant Seed","Mr Carrot Seed","Tomatrio Seed","Shroombino Seed"}

-- Variables
local selectedGears, selectedSeeds = {}, {}
local autoBuyGears, autoBuySeeds = false, false
local autoBuyAllGears, autoBuyAllSeeds = false, false
local gearDelay, seedDelay = 1, 1
local autoBestBrainrot, autoBrainrotDelay = false, 60

-- Functions
local function buyGear(item) pcall(function() BuyGearRemote:FireServer(item) end) end
local function buySeed(item) pcall(function() BuyItemRemote:FireServer(item) end) end
local function equipBestBrainrot() pcall(function() EquipBestBrainrotRemote:FireServer() end) end

-- Anti-AFK
local VirtualUser = game:GetService("VirtualUser")
LocalPlayer.Idled:Connect(function()
	VirtualUser:CaptureController()
	VirtualUser:ClickButton2(Vector2.new())
end)

-- ðŸŒŸ Gears Tab
local gearTab = Window:CreateTab({
	Name = "ðŸŒŸ Gears",
	Icon = "tool",
	ShowTitle = true
})

gearTab:CreateDivider()
gearTab:CreateParagraph({
	Title = "Gear Shop",
	Text = "Select gears and choose how to buy them."
})

local gearDropdown = gearTab:CreateDropdown({
	Name = "Select Gears",
	Options = gearList,
	CurrentOption = {},
	MultipleOptions = true,
	Callback = function(options) selectedGears = options end
}, "SelectedGears")

local gearDelayInput = gearTab:CreateInput({
	Name = "Gear Buy Delay",
	PlaceholderText = "Enter delay in seconds",
	CurrentValue = tostring(gearDelay),
	Numeric = true,
	Enter = true,
	Callback = function(text)
		local num = tonumber(text)
		if num and num > 0 then gearDelay = num end
	end
}, "GearDelay")

local autoSelectedGearsToggle = gearTab:CreateToggle({
	Name = "Auto Buy Selected Gears",
	CurrentValue = false,
	Callback = function(state)
		autoBuyGears = state
		task.spawn(function()
			while autoBuyGears do
				for _, gear in ipairs(selectedGears) do
					if not autoBuyGears then break end
					buyGear(gear)
					task.wait(gearDelay)
				end
				task.wait(3)
			end
		end)
	end
}, "AutoBuySelectedGears")

local autoAllGearsToggle = gearTab:CreateToggle({
	Name = "Auto Buy ALL Gears",
	CurrentValue = false,
	Callback = function(state)
		autoBuyAllGears = state
		task.spawn(function()
			while autoBuyAllGears do
				for _, gear in ipairs(gearList) do
					if not autoBuyAllGears then break end
					buyGear(gear)
					task.wait(gearDelay)
				end
				task.wait(3)
			end
		end)
	end
}, "AutoBuyAllGears")

gearTab:BuildConfigSection()

-- ðŸŒ± Seeds Tab
local seedTab = Window:CreateTab({
	Name = "ðŸŒ± Seeds",
	Icon = "leaf",
	ShowTitle = true
})

seedTab:CreateDivider()
seedTab:CreateParagraph({
	Title = "Seed Shop",
	Text = "Select seeds and choose how to buy them."
})

local seedDropdown = seedTab:CreateDropdown({
	Name = "Select Seeds",
	Options = seedList,
	CurrentOption = {},
	MultipleOptions = true,
	Callback = function(options) selectedSeeds = options end
}, "SelectedSeeds")

local seedDelayInput = seedTab:CreateInput({
	Name = "Seed Buy Delay",
	PlaceholderText = "Enter delay in seconds",
	CurrentValue = tostring(seedDelay),
	Numeric = true,
	Enter = true,
	Callback = function(text)
		local num = tonumber(text)
		if num and num > 0 then seedDelay = num end
	end
}, "SeedDelay")

local autoSelectedSeedsToggle = seedTab:CreateToggle({
	Name = "Auto Buy Selected Seeds",
	CurrentValue = false,
	Callback = function(state)
		autoBuySeeds = state
		task.spawn(function()
			while autoBuySeeds do
				for _, seed in ipairs(selectedSeeds) do
					if not autoBuySeeds then break end
					buySeed(seed)
					task.wait(seedDelay)
				end
				task.wait(3)
			end
		end)
	end
}, "AutoBuySelectedSeeds")

local autoAllSeedsToggle = seedTab:CreateToggle({
	Name = "Auto Buy ALL Seeds",
	CurrentValue = false,
	Callback = function(state)
		autoBuyAllSeeds = state
		task.spawn(function()
			while autoBuyAllSeeds do
				for _, seed in ipairs(seedList) do
					if not autoBuyAllSeeds then break end
					buySeed(seed)
					task.wait(seedDelay)
				end
				task.wait(3)
			end
		end)
	end
}, "AutoBuyAllSeeds")

seedTab:BuildConfigSection()

-- ðŸ§  Brainrots Tab
local brainTab = Window:CreateTab({
	Name = "ðŸ§  Brainrots",
	Icon = "brain",
	ShowTitle = true
})

brainTab:CreateDivider()
brainTab:CreateParagraph({
	Title = "Brainrot Auto",
	Text = "Equip the best brainrot automatically or manually."
})

brainTab:CreateButton({
	Name = "Equip Best Brainrot",
	Description = nil,
	Callback = function() equipBestBrainrot() end
})

local autoBrainrotInput = brainTab:CreateInput({
	Name = "Auto Equip Delay",
	PlaceholderText = "Enter delay in seconds",
	CurrentValue = tostring(autoBrainrotDelay),
	Numeric = true,
	Enter = true,
	Callback = function(text)
		local num = tonumber(text)
		if num and num > 0 then autoBrainrotDelay = num end
	end
}, "AutoBrainrotDelay")

local autoBestBrainrotToggle = brainTab:CreateToggle({
	Name = "Auto Equip Best Brainrot",
	CurrentValue = false,
	Callback = function(state)
		autoBestBrainrot = state
		task.spawn(function()
			while autoBestBrainrot do
				equipBestBrainrot()
				task.wait(autoBrainrotDelay)
			end
		end)
	end
}, "AutoEquipBestBrainrot")

brainTab:BuildConfigSection()
